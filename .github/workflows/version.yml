name: Version
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version'
        required: true
        default: 'patch'
        type: choice
        options:
          - "major"
          - "minor"
          - "patch"
          - "premajor"
          - "preminor"
          - "prepatch"
          - "prerelease"
          - "from-git"

jobs:
  version:
    if: github.ref == 'refs/heads/main'
    outputs:
      VERSION: ${{ steps.version.outputs.VERSION }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@main
      - uses: actions/setup-node@main
        with:
          node-version: "19"

      - name: Set version
        run: |
          npm version ${{ github.event.inputs.version }} --no-git-tag-version

      - name: Get version
        id: version
        run: echo "VERSION=$(node -p "require('./package.json').version")" >> "$GITHUB_ENV"

      - name: Echo version
        run: echo ${{ steps.version.outputs.VERSION }}

      - run: npm install

      - run: npm run generate:spec

      - run: ls -la
      - run: ls -la generated

      - run: echo "GIT_EMAIL=$(git log -n 1 --pretty=format:%ae)" >> "$GITHUB_ENV"
      - run: echo "GIT_NAME=$(git log -n 1 --pretty=format:%an)" >> "$GITHUB_ENV"

      - run: git config --global user.email "${{ env.GIT_EMAIL }}"
      - run: git config --global user.name "${{ env.GIT_NAME }}"

      - run: git add package.json
      - run: git add generated/openapi.json
      - run: git add generated/openapi.dereferenced.json
      - run: git add generated/openapi.3.0.json
      - run: git add generated/openapi.dereferenced.3.0.json

      - run: echo "TAG=v${{ env.VERSION }}" >> "$GITHUB_ENV"

      - run: git commit -m "${{ env.TAG }}"
      - run: git tag -a "${{ env.TAG }}" -m "${{ env.TAG }}"
      # - run: git push origin "${{ env.TAG }}"
      - run: git push origin main --follow-tags
